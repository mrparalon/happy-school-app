# AUTOGENERATED FROM 'bot/happy_school_bot/db_queries/get_qr_code_by_id.edgeql' WITH:
#     $ edgedb-py


from __future__ import annotations
import dataclasses
import datetime
import edgedb
import uuid


class NoPydanticValidation:
    @classmethod
    def __get_pydantic_core_schema__(cls, _source_type, _handler):
        # Pydantic 2.x
        from pydantic_core.core_schema import any_schema
        return any_schema()

    @classmethod
    def __get_validators__(cls):
        # Pydantic 1.x
        from pydantic.dataclasses import dataclass as pydantic_dataclass
        pydantic_dataclass(cls)
        cls.__pydantic_model__.__get_validators__ = lambda: []
        return []


@dataclasses.dataclass
class GetQrCodeByIdResult(NoPydanticValidation):
    id: uuid.UUID
    students: list[GetQrCodeByIdResultStudentsItem]
    parent: GetQrCodeByIdResultParent


@dataclasses.dataclass
class GetQrCodeByIdResultParent(NoPydanticValidation):
    id: uuid.UUID
    updated_at: datetime.datetime
    created_at: datetime.datetime
    user: GetQrCodeByIdResultParentUser


@dataclasses.dataclass
class GetQrCodeByIdResultParentUser(NoPydanticValidation):
    id: uuid.UUID
    first_name: str
    last_name: str
    status: str
    tg_id: int | None


@dataclasses.dataclass
class GetQrCodeByIdResultStudentsItem(NoPydanticValidation):
    id: uuid.UUID
    updated_at: datetime.datetime
    created_at: datetime.datetime
    user: GetQrCodeByIdResultStudentsItemUser
    parents: list[GetQrCodeByIdResultStudentsItemParentsItem]


@dataclasses.dataclass
class GetQrCodeByIdResultStudentsItemParentsItem(NoPydanticValidation):
    id: uuid.UUID
    user: GetQrCodeByIdResultStudentsItemParentsItemUser


@dataclasses.dataclass
class GetQrCodeByIdResultStudentsItemParentsItemUser(NoPydanticValidation):
    id: uuid.UUID
    tg_id: int | None


@dataclasses.dataclass
class GetQrCodeByIdResultStudentsItemUser(NoPydanticValidation):
    id: uuid.UUID
    first_name: str
    last_name: str
    status: str


async def get_qr_code_by_id(
    executor: edgedb.AsyncIOExecutor,
    *,
    qr_code_id: uuid.UUID,
) -> GetQrCodeByIdResult | None:
    return await executor.query_single(
        """\
        select EntranceQRcode{
            students: {
                id,
                updated_at,
                created_at,
                user: {
                    id,
                    first_name,
                    last_name,
                    status
                },
                parents: {
                    user: {
                       tg_id 
                    }
                }
            },
            parent: {
                id,
                updated_at,
                created_at,
                user: {
                    id,
                    first_name,
                    last_name,
                    status,
                    tg_id
                }
            }
        }
        filter .id = <uuid>$qr_code_id and .is_deleted = false\
        """,
        qr_code_id=qr_code_id,
    )
