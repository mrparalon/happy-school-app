# AUTOGENERATED FROM 'app/dependencies/db_queries/create_parent_with_identity.edgeql' WITH:
#     $ edgedb-py


from __future__ import annotations
import dataclasses
import datetime
import edgedb
import uuid


class NoPydanticValidation:
    @classmethod
    def __get_pydantic_core_schema__(cls, _source_type, _handler):
        # Pydantic 2.x
        from pydantic_core.core_schema import any_schema
        return any_schema()

    @classmethod
    def __get_validators__(cls):
        # Pydantic 1.x
        from pydantic.dataclasses import dataclass as pydantic_dataclass
        pydantic_dataclass(cls)
        cls.__pydantic_model__.__get_validators__ = lambda: []
        return []


@dataclasses.dataclass
class CreateParentWithIdentityResult(NoPydanticValidation):
    id: uuid.UUID
    updated_at: datetime.datetime
    created_at: datetime.datetime
    user: CreateParentWithIdentityResultUser


@dataclasses.dataclass
class CreateParentWithIdentityResultUser(NoPydanticValidation):
    id: uuid.UUID
    first_name: str
    last_name: str
    status: str


async def create_parent_with_identity(
    executor: edgedb.AsyncIOExecutor,
    *,
    email: str,
    first_name: str,
    last_name: str,
) -> CreateParentWithIdentityResult:
    return await executor.query_single(
        """\
        WITH
        email_factor := (assert_single((select ext::auth::EmailFactor {identity} filter .email = <str>$email))),
        new_parent := (INSERT Parent{
            user := (INSERT User {
            first_name := <str>$first_name,
            last_name := <str>$last_name,
            email := <str>$email,
            status := "active",
            identity := email_factor.identity,
            })
        } )
        SELECT new_parent {
            id,
            updated_at,
            created_at,
            user: {
                id,
                first_name,
                last_name,
                status
            }
        };\
        """,
        email=email,
        first_name=first_name,
        last_name=last_name,
    )
