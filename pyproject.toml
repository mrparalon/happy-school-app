[tool.poetry]
name = "happy-school-backend"
version = "0.1.0"
description = ""
authors = ["Alexey Sherchenkov <mr.paralon@gmail.com>"]

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.108.0"
sentry-sdk = "^1.9.5"
edgedb = "^1.8.0"
uvicorn = {version = "^0.25.0", extras = ["standard"]}
passlib = "^1.7.4"
python-jose = "^3.3.0"
python-multipart = "^0.0.5"
bcrypt = "^4.0.0"
orjson = "^3.8.0"
httpx = "^0.23.0"
python-dotenv = "^0.21.0"
Telethon = "^1.25.4"
transliterate = "^1.10.2"
tqdm = "^4.64.1"
loguru = "^0.6.0"
pydantic = "^2.5.3"
pydantic-settings = "^2.1.0"
jinja2 = "^3.1.2"

[tool.poetry.dev-dependencies]
pytest = "^7.1.2"
pytest-asyncio = "^0.19.0"
Faker = "^14.2.0"
pytest-mock = "^3.10.0"

[tool.poetry.group.dev.dependencies]
pytest-profiling = "^1.7.0"
ruff = "^0.1.11"
pyright = "^1.1.344"
pdbpp = "^0.10.3"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 79
target_version = ['py311']

[tool.pyright]
fail_under = 0
pythonVersion = "3.11"
exclude = ["scripts", "**/db_queries/", "migrations", "prepare_test_data_for_bot.py", "bot"]

[tool.ruff]
line-length = 120
select = [
    "F",        # pyflakes
    "E",        # pycodestyle errors
    "W",        # pycodestyle warnings
    "C90",      # mccabe
    "I",        # isort
    "N",        # pep8-naming
    "UP",       # pyupgrade
    "YTT",      # flake8-2020
    "S",        # flake8-bandit
    "BLE",      # flake8-blind-except
    "FBT003",   # flake8-boolean-trap
    "B",        # flake8-bugbear
    "A",        # flake8-builtins
    "C4",       # flake8-comprehensions
    "T10",      # flake8-debugger
    "ISC",      # flake8-implicit-str-concat
    "G010",     # Logging statement uses warn instead of warning
    "G201",     # Logging .exception(...) should be used instead of .error(..., exc_info=True)
    "G202",     # Logging statement has redundant exc_info
    "INP",      # flake8-no-pep420
    "PIE",      # flake8-pie
    "T20",      # flake8-print
    "PYI",      # flake8-pyi
    "PT",       # flake8-pytest-style
    "Q",        # flake8-quotes
    "RSE",      # flake8-raise
    "RET",      # flake8-return
    "SIM",      # flake8-simplify
    "TCH",      # flake8-type-checking
    "ARG",      # flake8-unused-arguments
    "PTH",      # flake8-use-pathlib
    "TD",       # flake8-todos
    "ERA",      # flake8-eradicate
    "PGH",      # pygrep-hooks
    "PLC0414",  # Import alias does not rename original package
    "PLE",      # Error
    "PLW",      # Warning
    "FLY",      # flynt
    "RUF",      # ruff-specific rules
]
unfixable = [
    "ERA001",   # eradicate: found commented out code (can be dangerous if fixed automatically)
]
ignore = [
    "B008",     # Do not perform function call `Depends` in argument defaults
    "A003",     # builtin shadowing in attributes
    "RET501",   # Do not explicitly `return None` in function if it is the only possible return value
    "RUF100",   # enable later, conflicting with flake8 now
    "S101",     # Use of `assert` detected
    "S311",     # Standard pseudo-random generators are not suitable for cryptographic purposes
    "TD002",    # Missing author in TODO; try: # TODO(<author_name>): ...
    "RUF001",
    "SIM108",
    "RET504" # not assign before return. Temp untill moving logic to scenarios
]

extend-exclude = ["migrations", "*/db_queries/*", "prepare_test_data_for_bot.py", "bot"]
